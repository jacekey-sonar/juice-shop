name: "SonarQube Analysis"

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    types: [opened, synchronize, reopened]

# Prevent concurrent runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  NODE_DEFAULT_VERSION: 20
  NODE_OPTIONS: "--max_old_space_size=4096"

jobs:
  sonarqube-scan:
    name: SonarQube Code Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better analysis

      - name: Setup Node.js
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af #v4.1.0
        with:
          node-version: ${{ env.NODE_DEFAULT_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install --ignore-scripts
          cd frontend
          npm install --ignore-scripts --legacy-peer-deps

      - name: Run tests with coverage
        run: |
          npm test || true
          npm run frisby || true
        env:
          NODE_ENV: test
        continue-on-error: true

      - name: Prepare coverage reports
        run: |
          if [ -f "build/reports/coverage/frontend-tests/lcov.info" ]; then
            cp build/reports/coverage/frontend-tests/lcov.info frontend-lcov.info
          fi
          if [ -f "build/reports/coverage/server-tests/lcov.info" ]; then
            cp build/reports/coverage/server-tests/lcov.info server-lcov.info
          fi
          if [ -f "build/reports/coverage/api-tests/lcov.info" ]; then
            cp build/reports/coverage/api-tests/lcov.info api-lcov.info
          fi
        continue-on-error: true

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@884b79409bbd464b2a59edc326a4b77dc56b2195 #v3.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.projectKey=jacekey-sonar_juice-shop
            -Dsonar.sources=.
            -Dsonar.exclusions=**/node_modules/**,**/build/**,**/dist/**,**/test/**,**/tests/**,**/*.spec.ts,**/*.test.ts
            -Dsonar.tests=test/
            -Dsonar.test.inclusions=**/*.spec.ts,**/*.test.ts
            -Dsonar.javascript.lcov.reportPaths=frontend-lcov.info,server-lcov.info,api-lcov.info
            -Dsonar.typescript.lcov.reportPaths=frontend-lcov.info,server-lcov.info,api-lcov.info

      - name: SonarQube Quality Gate Check
        uses: sonarsource/sonarqube-quality-gate-action@f9fe214a5be5769c40619de2fff2726c36d2d5eb #v1.1.0
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        continue-on-error: true

  sonarqube-results:
    name: Display SonarQube Results
    needs: sonarqube-scan
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Check Quality Gate Status
        run: |
          echo "SonarQube analysis completed."
          echo "View detailed results at: ${{ secrets.SONAR_HOST_URL }}/dashboard?id=jacekey-sonar_juice-shop"
