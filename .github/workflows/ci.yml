name: "CI/CD Pipeline"

on:
  push:
    branches:
      - master
      - develop
    paths-ignore:
      - '*.md'
      - 'LICENSE'
      - 'monitoring/grafana-dashboard.json'
      - 'screenshots/**'
  pull_request:
    branches:
      - master
      - develop
    paths-ignore:
      - '*.md'
      - 'LICENSE'
      - 'data/static/i18n/*.json'
      - 'frontend/src/assets/i18n/*.json'

# Prevent concurrent runs on the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Set minimal permissions by default
permissions:
  contents: read

env:
  NODE_DEFAULT_VERSION: 20
  NODE_OPTIONS: "--max_old_space_size=4096"

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2

      - name: Setup Node.js
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af #v4.1.0
        with:
          node-version: ${{ env.NODE_DEFAULT_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install --ignore-scripts
          cd frontend
          npm install --ignore-scripts --legacy-peer-deps

      - name: Run linter
        run: npm run lint

      - name: Lint configuration files
        run: >
          npm run lint:config -- -f ./config/7ms.yml &&
          npm run lint:config -- -f ./config/addo.yml &&
          npm run lint:config -- -f ./config/bodgeit.yml &&
          npm run lint:config -- -f ./config/ctf.yml &&
          npm run lint:config -- -f ./config/default.yml &&
          npm run lint:config -- -f ./config/fbctf.yml &&
          npm run lint:config -- -f ./config/juicebox.yml &&
          npm run lint:config -- -f ./config/mozilla.yml &&
          npm run lint:config -- -f ./config/oss.yml &&
          npm run lint:config -- -f ./config/quiet.yml &&
          npm run lint:config -- -f ./config/tutorial.yml &&
          npm run lint:config -- -f ./config/unsafe.yml

  test-unit:
    name: Unit Tests (Node ${{ matrix.node-version }} - ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        node-version: [18, 20, 21, 22]
    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af #v4.1.0
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run unit tests
        uses: nick-invision/retry@7152eba30c6575329ac0576536151aca5a72780e #v3.0.0
        with:
          timeout_minutes: 15
          max_attempts: 3
          command: npm test

      - name: Copy coverage data
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20'
        run: |
          cp build/reports/coverage/frontend-tests/lcov.info frontend-lcov.info
          cp build/reports/coverage/server-tests/lcov.info server-lcov.info

      - name: Upload coverage artifacts
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20'
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b #v4.5.0
        with:
          name: unit-test-coverage
          path: |
            frontend-lcov.info
            server-lcov.info
          retention-days: 7

  test-api:
    name: API Tests (Node ${{ matrix.node-version }} - ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [18, 20, 21, 22]
    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af #v4.1.0
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run API tests
        uses: nick-invision/retry@7152eba30c6575329ac0576536151aca5a72780e #v3.0.0
        env:
          NODE_ENV: test
        with:
          timeout_minutes: 5
          max_attempts: 3
          command: npm run frisby

      - name: Copy API coverage data
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20'
        run: cp build/reports/coverage/api-tests/lcov.info api-lcov.info

      - name: Upload API coverage artifacts
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20'
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b #v4.5.0
        with:
          name: api-test-coverage
          path: api-lcov.info
          retention-days: 7

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [lint, test-unit, test-api]
    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2

      - name: Setup Node.js
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af #v4.1.0
        with:
          node-version: ${{ env.NODE_DEFAULT_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build backend
        run: npm run build:server

      - name: Build frontend
        run: npm run build:frontend

      - name: Upload build artifacts
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b #v4.5.0
        with:
          name: build-artifacts
          path: |
            build/
            frontend/dist/
          retention-days: 7

  docker-test:
    name: Docker Smoke Test
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2

      - name: Run Docker smoke test
        run: docker compose -f docker-compose.test.yml up --exit-code-from sut

  coverage-report:
    name: Coverage Report
    needs: [test-unit, test-api]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2

      - name: Download unit test coverage
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 #v4.1.8
        with:
          name: unit-test-coverage

      - name: Download API test coverage
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 #v4.1.8
        with:
          name: api-test-coverage

      - name: Publish to Codeclimate
        if: env.CC_TEST_REPORTER_ID != ''
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          sed -i s/SF:/SF:frontend\\//g frontend-lcov.info
          ./cc-test-reporter format-coverage -t lcov -o codeclimate.frontend.json frontend-lcov.info
          ./cc-test-reporter format-coverage -t lcov -o codeclimate.server.json server-lcov.info
          ./cc-test-reporter format-coverage -t lcov -o codeclimate.api.json api-lcov.info
          ./cc-test-reporter sum-coverage codeclimate.*.json -p 3
          ./cc-test-reporter upload-coverage
        continue-on-error: true